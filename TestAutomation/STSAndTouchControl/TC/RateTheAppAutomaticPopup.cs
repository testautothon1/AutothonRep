///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSAndTouchControl.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RateTheAppAutomaticPopup recording.
    /// </summary>
    [TestModule("7460a8a2-6a73-46f2-bd24-d263a98d6cdd", ModuleType.Recording, 1)]
    public partial class RateTheAppAutomaticPopup : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSAndTouchControl.STSAndTouchControlRepository repository.
        /// </summary>
        public static STSAndTouchControl.STSAndTouchControlRepository repo = STSAndTouchControl.STSAndTouchControlRepository.Instance;

        static RateTheAppAutomaticPopup instance = new RateTheAppAutomaticPopup();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RateTheAppAutomaticPopup()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RateTheAppAutomaticPopup Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Step## Precondition- Disable Omniture Settings
            Report.Log(ReportLevel.Info, "Section", "Step## Precondition- Disable Omniture Settings", new RecordItemIndex(0));
            
            StartApp();
            Delay.Milliseconds(0);
            
            TapOnSettings();
            Delay.Milliseconds(0);
            
            SwitchUsageStatistics(ValueConverter.ArgumentFromString<bool>("on", "False"));
            Delay.Milliseconds(0);
            
            CloseApp();
            Delay.Milliseconds(0);
            
            // Step## Start and close the app 20 times
            Report.Log(ReportLevel.Info, "Section", "Step## Start and close the app 20 times", new RecordItemIndex(5));
            
            // Validation## Automatic popup with the following options are displayed "Not now", "No rating", "Rate the App Now" .  Click on "Not now"
            Report.Log(ReportLevel.Info, "Section", "Validation## Automatic popup with the following options are displayed \"Not now\", \"No rating\", \"Rate the App Now\" .  Click on \"Not now\"", new RecordItemIndex(6));
            
            ValidateRateOurApp("Not now", ValueConverter.ArgumentFromString<bool>("isPopup", "True"), ValueConverter.ArgumentFromString<int>("runCount", "16"));
            Delay.Milliseconds(0);
            
            // Step## Start the App 20 times again
            Report.Log(ReportLevel.Info, "Section", "Step## Start the App 20 times again", new RecordItemIndex(8));
            
            // Validation## User will be prompted again after 20 launches of the App and Click on "Not now"
            Report.Log(ReportLevel.Info, "Section", "Validation## User will be prompted again after 20 launches of the App and Click on \"Not now\"", new RecordItemIndex(9));
            
            ValidateRateOurApp("Not now", ValueConverter.ArgumentFromString<bool>("isPopup", "True"), ValueConverter.ArgumentFromString<int>("runCount", "20"));
            Delay.Milliseconds(0);
            
            // Step## Start the App 20 times again
            Report.Log(ReportLevel.Info, "Section", "Step## Start the App 20 times again", new RecordItemIndex(11));
            
            // Validation## User will be prompted again after 20 launches of the App and Click on "No rating"
            Report.Log(ReportLevel.Info, "Section", "Validation## User will be prompted again after 20 launches of the App and Click on \"No rating\"", new RecordItemIndex(12));
            
            ValidateRateOurApp("No rating", ValueConverter.ArgumentFromString<bool>("isPopup", "True"), ValueConverter.ArgumentFromString<int>("runCount", "20"));
            Delay.Milliseconds(0);
            
            // Step## Start the App 20 times again
            Report.Log(ReportLevel.Info, "Section", "Step## Start the App 20 times again", new RecordItemIndex(14));
            
            // Validation## User will Not be prompted again after 20 launches of the App
            Report.Log(ReportLevel.Info, "Section", "Validation## User will Not be prompted again after 20 launches of the App", new RecordItemIndex(15));
            
            ValidateRateOurApp("No rating", ValueConverter.ArgumentFromString<bool>("isPopup", "False"), ValueConverter.ArgumentFromString<int>("runCount", "20"));
            Delay.Milliseconds(0);
            
            // Step## Click on Rate the App now
            Report.Log(ReportLevel.Info, "Section", "Step## Click on Rate the App now", new RecordItemIndex(17));
            
            // Validation## The app shall open the corresponding app store link of the app for app store rating Automatic popups will be disabled
            Report.Log(ReportLevel.Info, "Section", "Validation## The app shall open the corresponding app store link of the app for app store rating Automatic popups will be disabled", new RecordItemIndex(18));
            
            CloseApp();
            Delay.Milliseconds(0);
            
            ClickRateTheAppNow();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
