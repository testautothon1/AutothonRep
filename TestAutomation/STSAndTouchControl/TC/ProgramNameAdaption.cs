///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSAndTouchControl.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ProgramNameAdaption recording.
    /// </summary>
    [TestModule("7bb2285a-b7b3-479e-8a92-e51f9ce05f22", ModuleType.Recording, 1)]
    public partial class ProgramNameAdaption : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSAndTouchControl.STSAndTouchControlRepository repository.
        /// </summary>
        public static STSAndTouchControl.STSAndTouchControlRepository repo = STSAndTouchControl.STSAndTouchControlRepository.Instance;

        static ProgramNameAdaption instance = new ProgramNameAdaption();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ProgramNameAdaption()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ProgramNameAdaption Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Step## Open settings.
            Report.Log(ReportLevel.Info, "Section", "Step## Open settings.", new RecordItemIndex(0));
            
            TapOnSettings();
            Delay.Milliseconds(0);
            
            // Step## Press Language and select another language from the selected one.
            Report.Log(ReportLevel.Info, "Section", "Step## Press Language and select another language from the selected one.", new RecordItemIndex(2));
            
            TapOn("Language");
            Delay.Milliseconds(0);
            
            TapOn("Italiano");
            Delay.Milliseconds(0);
            
            TapOn("Lingua");
            Delay.Milliseconds(0);
            
            // Validation## Available languages are listed and one of them is selected.
            Report.Log(ReportLevel.Info, "Section", "Validation## Available languages are listed and one of them is selected.", new RecordItemIndex(6));
            
            ValidateTextSelected("Italiano");
            Delay.Milliseconds(0);
            
            ValidateContents("English;Deutsch;简体中文;繁體中文;Nederlands;Italiano;Español;Français;Norsk;Türkçe;Čeština;Polski;Português;Dansk;Svenska;Русский;한국어;Hungarian");
            Delay.Milliseconds(0);
            
            // Step## Press back button and go to home screen.
            Report.Log(ReportLevel.Info, "Section", "Step## Press back button and go to home screen.", new RecordItemIndex(9));
            
            BackAction();
            Delay.Milliseconds(0);
            
            BackAction();
            Delay.Milliseconds(0);
            
            // Validatoin## Home screen is opened.
            Report.Log(ReportLevel.Info, "Section", "Validatoin## Home screen is opened.", new RecordItemIndex(12));
            
            ValidateControlsOnHomescreen();
            Delay.Milliseconds(0);
            
            // Steps## Press program selection button.
            Report.Log(ReportLevel.Info, "Section", "Steps## Press program selection button.", new RecordItemIndex(14));
            
            TapOnProgram();
            Delay.Milliseconds(0);
            
            // Step## Check if program names are adapted to the last selected language.
            Report.Log(ReportLevel.Info, "Section", "Step## Check if program names are adapted to the last selected language.", new RecordItemIndex(16));
            
            // Validation## Configured programs are seen. Program names are adapted to the last selected language’s default program names.
            Report.Log(ReportLevel.Info, "Section", "Validation## Configured programs are seen. Program names are adapted to the last selected language’s default program names.", new RecordItemIndex(17));
            
            ValidateContents("Programma 1;Programma 2;Programma 3;Programma 4;Programma 5;Tinnitus");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
