///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSAndTouchControl.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SelectingProgramNumberAndTinnitusMasker recording.
    /// </summary>
    [TestModule("fd0855f5-9803-4a9d-a063-41fbe1725e7f", ModuleType.Recording, 1)]
    public partial class SelectingProgramNumberAndTinnitusMasker : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSAndTouchControl.STSAndTouchControlRepository repository.
        /// </summary>
        public static STSAndTouchControl.STSAndTouchControlRepository repo = STSAndTouchControl.STSAndTouchControlRepository.Instance;

        static SelectingProgramNumberAndTinnitusMasker instance = new SelectingProgramNumberAndTinnitusMasker();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SelectingProgramNumberAndTinnitusMasker()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SelectingProgramNumberAndTinnitusMasker Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Step## Start application.Select Siginia Products under Manual Setup
            Report.Log(ReportLevel.Info, "Section", "Step## Start application.Select Siginia Products under Manual Setup", new RecordItemIndex(0));
            
            TapOnSettings();
            Delay.Milliseconds(0);
            
            TapOn("Setup");
            Delay.Milliseconds(0);
            
            TapOn("Manual Setup");
            Delay.Milliseconds(0);
            
            TapOn("Signia Products");
            Delay.Milliseconds(0);
            
            // Validation## The setup screen is displayed The app shall send the pairing command
            Report.Log(ReportLevel.Info, "Section", "Validation## The setup screen is displayed The app shall send the pairing command", new RecordItemIndex(5));
            
            ValidateContentsContains("A confirmation sound played from the hearing aids indicates a successful pairing.\r\n\r\nDid you hear the confirmation sound?", ValueConverter.ArgumentFromString<bool>("isFound", "True"));
            Delay.Milliseconds(0);
            
            // Step## If successful pairing sound comes from HIs, Press Yes.
            Report.Log(ReportLevel.Info, "Section", "Step## If successful pairing sound comes from HIs, Press Yes.", new RecordItemIndex(7));
            
            TapOn("Yes");
            Delay.Milliseconds(0);
            
            // Step## Press Yes again in order to select Total program number
            Report.Log(ReportLevel.Info, "Section", "Step## Press Yes again in order to select Total program number", new RecordItemIndex(9));
            
            TapOn("Yes");
            Delay.Milliseconds(0);
            
            TapOn("6");
            Delay.Milliseconds(0);
            
            // Validation##  Verify "Do you use a tinnitus program?" question
            Report.Log(ReportLevel.Info, "Section", "Validation##  Verify \"Do you use a tinnitus program?\" question", new RecordItemIndex(12));
            
            ValidateContents("Do you use a tinnitus program?");
            Delay.Milliseconds(0);
            
            // Step## Tap on Yes, to select tinnitus programs
            Report.Log(ReportLevel.Info, "Section", "Step## Tap on Yes, to select tinnitus programs", new RecordItemIndex(14));
            
            TapOn("Yes");
            Delay.Milliseconds(0);
            
            // Validation## Verify "Which programs is the tinnitus program?"
            Report.Log(ReportLevel.Info, "Section", "Validation## Verify \"Which programs is the tinnitus program?\"", new RecordItemIndex(16));
            
            ValidateContentsContains("Which programs is the tinnitus program?\r\n\r\nIf you do not know, you can ask your hearing care professional and change this setting later.", ValueConverter.ArgumentFromString<bool>("isFound", "True"));
            Delay.Milliseconds(0);
            
            // Step## Select 3 programs from the list for Tinnitus Masker.
            Report.Log(ReportLevel.Info, "Section", "Step## Select 3 programs from the list for Tinnitus Masker.", new RecordItemIndex(18));
            
            // Validation## It is possible to select more than one tinnitus masker programs. Tinnitus Masker programs are selected.
            Report.Log(ReportLevel.Info, "Section", "Validation## It is possible to select more than one tinnitus masker programs. Tinnitus Masker programs are selected.", new RecordItemIndex(19));
            
            TapOn("4");
            Delay.Milliseconds(0);
            
            TapOn("5");
            Delay.Milliseconds(0);
            
            TapOn("6");
            Delay.Milliseconds(0);
            
            // Step## Press Continue
            Report.Log(ReportLevel.Info, "Section", "Step## Press Continue", new RecordItemIndex(23));
            
            TapOn("Continue");
            Delay.Milliseconds(0);
            
            // Validation## Verify the Finish setup screen shall offer the possibility to enter advanced setup
            Report.Log(ReportLevel.Info, "Section", "Validation## Verify the Finish setup screen shall offer the possibility to enter advanced setup", new RecordItemIndex(25));
            
            ValidateContents("Advanced Settings");
            Delay.Milliseconds(0);
            
            // Step## Press Continue to finish setup
            Report.Log(ReportLevel.Info, "Section", "Step## Press Continue to finish setup", new RecordItemIndex(27));
            
            TapOn("Continue");
            Delay.Milliseconds(0);
            
            // Validation## Setup process is finished successfully  and home page is opened. First program “Program 1” comes as preselected
            Report.Log(ReportLevel.Info, "Section", "Validation## Setup process is finished successfully  and home page is opened. First program “Program 1” comes as preselected", new RecordItemIndex(29));
            
            ValidateContents("Program 1");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
