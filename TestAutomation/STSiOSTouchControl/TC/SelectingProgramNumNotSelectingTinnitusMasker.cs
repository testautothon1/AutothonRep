///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSiOSTouchControl.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SelectingProgramNumNotSelectingTinnitusMasker recording.
    /// </summary>
    [TestModule("d4ae6fa9-bc4f-4fc1-b931-f849dc20a400", ModuleType.Recording, 1)]
    public partial class SelectingProgramNumNotSelectingTinnitusMasker : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSiOSTouchControl.STSiOSTouchControlRepository repository.
        /// </summary>
        public static STSiOSTouchControl.STSiOSTouchControlRepository repo = STSiOSTouchControl.STSiOSTouchControlRepository.Instance;

        static SelectingProgramNumNotSelectingTinnitusMasker instance = new SelectingProgramNumNotSelectingTinnitusMasker();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SelectingProgramNumNotSelectingTinnitusMasker()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SelectingProgramNumNotSelectingTinnitusMasker Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Step## Start application.Navigate to settings screen and select set up
            Report.Log(ReportLevel.Info, "Section", "Step## Start application.Navigate to settings screen and select set up", new RecordItemIndex(0));
            
            TapOnSettings();
            Delay.Milliseconds(0);
            
            TapOn("Setup");
            Delay.Milliseconds(0);
            
            // Step## Select "Siginia Products" under Manual Setup
            Report.Log(ReportLevel.Info, "Section", "Step## Select \"Siginia Products\" under Manual Setup", new RecordItemIndex(3));
            
            TapOn("Manual Setup");
            Delay.Milliseconds(0);
            
            TapOn("Signia products");
            Delay.Milliseconds(0);
            
            // Validation## The setup screen is displayed The app shall send the pairing command
            Report.Log(ReportLevel.Info, "Section", "Validation## The setup screen is displayed The app shall send the pairing command", new RecordItemIndex(6));
            
            ValidateContents("A confirmation sound played from the hearing aids indicates a successful pairing.;Did you hear the confirmation sound?");
            Delay.Milliseconds(0);
            
            // Step## If successful pairing sound comes from HIs, Press Yes.
            Report.Log(ReportLevel.Info, "Section", "Step## If successful pairing sound comes from HIs, Press Yes.", new RecordItemIndex(8));
            
            TapOn("Yes");
            Delay.Milliseconds(0);
            
            // Step## Press Yes again in order to select Total program number
            Report.Log(ReportLevel.Info, "Section", "Step## Press Yes again in order to select Total program number", new RecordItemIndex(10));
            
            TapOn("Yes");
            Delay.Milliseconds(0);
            
            // Step## Select total program number. Total program number should be between 1 and 6.
            Report.Log(ReportLevel.Info, "Section", "Step## Select total program number. Total program number should be between 1 and 6.", new RecordItemIndex(12));
            
            ValidateContents("2;3;4;5;6");
            Delay.Milliseconds(0);
            
            TapOn("6");
            Delay.Milliseconds(0);
            
            // Validation##  Verify "Do you use a tinnitus program?" question
            Report.Log(ReportLevel.Info, "Section", "Validation##  Verify \"Do you use a tinnitus program?\" question", new RecordItemIndex(15));
            
            ValidateContents("Do you use a tinnitus program?");
            Delay.Milliseconds(0);
            
            // Step## Press No for “Do you use a Tinnitus Masker?” question.
            Report.Log(ReportLevel.Info, "Section", "Step## Press No for “Do you use a Tinnitus Masker?” question.", new RecordItemIndex(17));
            
            TapOn("No");
            Delay.Milliseconds(0);
            
            // Validation##  Setup process is finished.
            Report.Log(ReportLevel.Info, "Section", "Validation##  Setup process is finished.", new RecordItemIndex(19));
            
            ValidateContents("Setup is Complete.");
            Delay.Milliseconds(0);
            
            // Step## Press Continue to finish setup
            Report.Log(ReportLevel.Info, "Section", "Step## Press Continue to finish setup", new RecordItemIndex(21));
            
            TapOn("Continue");
            Delay.Milliseconds(0);
            
            // Validation## Setup is completed. Home desktop page is opened. First program “Program 1” is preselected.Tinnitus is NOT listed in program list.
            Report.Log(ReportLevel.Info, "Section", "Validation## Setup is completed. Home desktop page is opened. First program “Program 1” is preselected.Tinnitus is NOT listed in program list.", new RecordItemIndex(23));
            
            ValidateContents("Program 1");
            Delay.Milliseconds(0);
            
            TapOnProgram();
            Delay.Milliseconds(0);
            
            ValidateContentsContains("Tinnitus", ValueConverter.ArgumentFromString<bool>("isFound", "False"));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
