///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using AppLayer;
using AppLayer.AppiumService;
using OpenQA.Selenium;
using OpenQA.Selenium.Appium;
using OpenQA.Selenium.Appium.Android;
using OpenQA.Selenium.Appium.iOS;
using OpenQA.Selenium.Appium.Service;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Remote;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace STSAndBasic.TC
{
	public partial class ConnexxBrandSelection:CommonHelper
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}
		
		private void TapOnContinue()
		{
			Logger.logInfo("Tap on 'Continue'");
			KeywordImplementation.Click(By.Name("Continue"));
		}
		
		private void ValidateSelectedBrand(string brand)
		{
			//Logger.logInfo(KeywordImplementation.UIObject(By.Id("Img_Language_Checkmark")).GetAttribute("resourceId"));
			//Logger.logInfo(KeywordImplementation.UIObject(By.Id("Img_Language_Checkmark")).GetAttribute("name"));
			//Logger.logInfo(KeywordImplementation.UIObject(By.Id("Img_Language_Checkmark")).GetAttribute("contentDesc"));
			if(KeywordImplementation.UIObject(By.Id("Img_Language_Checkmark")).GetAttribute("name").Contains(brand))
				Logger.logSuccess("Brand "+brand+" is selected",true);
			else
				Logger.logFailure("Brand "+brand+" is not selected",true);
		}
		
		private void SelectBrand(string brand)
		{
			Logger.logInfo("Select the brand "+brand);
			KeywordImplementation.Click(By.Name(brand));
		}
		
		private void SwitchMold(bool on)
		{
			var switchMold=KeywordImplementation.UIObject(By.Id("Switch_CustomMolds_UseMolds"),TimeSpan.FromSeconds(5));
			if((on.Equals(true) && switchMold.Text.Equals("No")) ||  (on.Equals(false) && switchMold.Text.Equals("Yes")))
			{
				switchMold.Click();
				Logger.logSuccess("Use custom ear molds state is " + switchMold.Text);
			}
			Logger.logSnapshot();
		}
		
		private void SelectCustoEarMoldContinue()
		{
		    Logger.logInfo("Select Custom Ear Molds Continue");	
			KeywordImplementation.Click(By.Id("Btn_CustomMolds_Continue"));
			if(KeywordImplementation.waitForObjectExist(By.Name("OK"),TimeSpan.FromSeconds(5)))
			{
				KeywordImplementation.Click(By.Name("OK"));
			}
		}

	}
}