///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSAndBasic.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PasscodeTest recording.
    /// </summary>
    [TestModule("a2fe4e9e-83eb-491d-bfb9-9cc17d0bb28f", ModuleType.Recording, 1)]
    public partial class PasscodeTest : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSAndBasic.STSAndBasicRepository repository.
        /// </summary>
        public static STSAndBasic.STSAndBasicRepository repo = STSAndBasic.STSAndBasicRepository.Instance;

        static PasscodeTest instance = new PasscodeTest();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PasscodeTest()
        {
            p1 = "";
            p2 = "";
            p3 = "";
            message = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PasscodeTest Instance
        {
            get { return instance; }
        }

#region Variables

        string _p1;

        /// <summary>
        /// Gets or sets the value of variable p1.
        /// </summary>
        [TestVariable("cf72a361-6f90-405c-a632-fb8a5a59094d")]
        public string p1
        {
            get { return _p1; }
            set { _p1 = value; }
        }

        string _p2;

        /// <summary>
        /// Gets or sets the value of variable p2.
        /// </summary>
        [TestVariable("cf563143-aea0-4df4-b696-4a14d83d2649")]
        public string p2
        {
            get { return _p2; }
            set { _p2 = value; }
        }

        string _p3;

        /// <summary>
        /// Gets or sets the value of variable p3.
        /// </summary>
        [TestVariable("cd64a503-3577-48b5-9aea-8bbe2a4b8371")]
        public string p3
        {
            get { return _p3; }
            set { _p3 = value; }
        }

        string _message;

        /// <summary>
        /// Gets or sets the value of variable message.
        /// </summary>
        [TestVariable("152cbd9d-5389-4fb0-b092-626a3d473d1f")]
        public string message
        {
            get { return _message; }
            set { _message = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            StartApp();
            Delay.Milliseconds(0);
            
            AcceptAndContinueWelcomeScreen();
            Delay.Milliseconds(0);
            
            VerifyActionBarTitle("Country");
            Delay.Milliseconds(0);
            
            SelectCountry("Rest of World");
            Delay.Milliseconds(0);
            
            // Step## Select the country location & click on done
            Report.Log(ReportLevel.Info, "Section", "Step## Select the country location & click on done", new RecordItemIndex(4));
            
            TapOnRightButton("Click on 'Done'");
            Delay.Milliseconds(0);
            
            VerifyActionBarTitle("Access Code");
            Delay.Milliseconds(0);
            
            // Step## Enter correct code and press Done
            Report.Log(ReportLevel.Info, "Section", "Step## Enter correct code and press Done", new RecordItemIndex(7));
            
            EnterCorrectCode(p1, p2, p3);
            Delay.Milliseconds(0);
            
            DoneAuthenticationScreen();
            Delay.Milliseconds(0);
            
            // Validation## Code entered successfully message shown with option to Continue
            Report.Log(ReportLevel.Info, "Section", "Validation## Code entered successfully message shown with option to Continue", new RecordItemIndex(10));
            
            ValidateContentsContains(message, ValueConverter.ArgumentFromString<bool>("isFound", "True"));
            Delay.Milliseconds(0);
            
            TapContinue();
            Delay.Milliseconds(0);
            
            TapContinue();
            Delay.Milliseconds(0);
            
            TapOnOk();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
