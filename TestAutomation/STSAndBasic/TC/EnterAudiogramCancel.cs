///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSAndBasic.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EnterAudiogramCancel recording.
    /// </summary>
    [TestModule("9d360074-4f93-41ec-83b6-f3c8028a67c7", ModuleType.Recording, 1)]
    public partial class EnterAudiogramCancel : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSAndBasic.STSAndBasicRepository repository.
        /// </summary>
        public static STSAndBasic.STSAndBasicRepository repo = STSAndBasic.STSAndBasicRepository.Instance;

        static EnterAudiogramCancel instance = new EnterAudiogramCancel();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EnterAudiogramCancel()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EnterAudiogramCancel Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Step## Open the app and go to New
            Report.Log(ReportLevel.Info, "Section", "Step## Open the app and go to New", new RecordItemIndex(0));
            
            // Step##Create a new customer with audiogram available and click continue
            Report.Log(ReportLevel.Info, "Section", "Step##Create a new customer with audiogram available and click continue", new RecordItemIndex(1));
            
            CreatePatient("Cancel", "Audiogram");
            Delay.Milliseconds(0);
            
            SelectCustomerContinue();
            Delay.Milliseconds(0);
            
            ValidateContents("Enter Audiogram;Select Hearing Aid;Select Sound Profile;Fit Coupling;Assemble Hearing Aid;Send Data to Hearing Aid;Check Sound Comfort");
            Delay.Milliseconds(0);
            
            CloseApp();
            Delay.Milliseconds(0);
            
            StartApp();
            Delay.Milliseconds(0);
            
            // Step## Open the app and goto List
            Report.Log(ReportLevel.Info, "Section", "Step## Open the app and goto List", new RecordItemIndex(7));
            
            // Step## Select the existing customer (with audiogram)
            Report.Log(ReportLevel.Info, "Section", "Step## Select the existing customer (with audiogram)", new RecordItemIndex(8));
            
            SearchCustomer("Cancel");
            Delay.Milliseconds(0);
            
            SelectCustomer("Cancel", "Audiogram");
            Delay.Milliseconds(0);
            
            // Step## Select Enter audiogram
            Report.Log(ReportLevel.Info, "Section", "Step## Select Enter audiogram", new RecordItemIndex(11));
            
            TapEnterAudiogram();
            Delay.Milliseconds(0);
            
            // Step## Enter audiogram points (left and right ear ) for frequencies 500Hz, 1kHz, 2kHz, 4kHz
            Report.Log(ReportLevel.Info, "Section", "Step## Enter audiogram points (left and right ear ) for frequencies 500Hz, 1kHz, 2kHz, 4kHz", new RecordItemIndex(13));
            
            DrawAudiogramPoints("Right", "500,50;1000,50;2000,50;4000,50");
            Delay.Milliseconds(0);
            
            DrawAudiogramPoints("Left", "500,50;1000,50;2000,50;4000,50");
            Delay.Milliseconds(0);
            
            // Step## Press the Back (android) / Cancel
            Report.Log(ReportLevel.Info, "Section", "Step## Press the Back (android) / Cancel", new RecordItemIndex(16));
            
            BackAction();
            Delay.Milliseconds(0);
            
            // Validation## Warning message "Unsaved audiogram data will be lost. Are you sure of your selection?" is displayed with two Options: OK and Cancel
            Report.Log(ReportLevel.Info, "Section", "Validation## Warning message \"Unsaved audiogram data will be lost. Are you sure of your selection?\" is displayed with two Options: OK and Cancel", new RecordItemIndex(18));
            
            ValidateContents("Unsaved audiogram data will be lost. Are you sure of your selection?;OK;Cancel");
            Delay.Milliseconds(0);
            
            ValidateContents("OK;Cancel");
            Delay.Milliseconds(0);
            
            // Step## Tap Cancel
            Report.Log(ReportLevel.Info, "Section", "Step## Tap Cancel", new RecordItemIndex(21));
            
            ClickOnAlertMessage("Cancel");
            Delay.Milliseconds(0);
            
            // Validation## Remains in the audiogram input screen
            Report.Log(ReportLevel.Info, "Section", "Validation## Remains in the audiogram input screen", new RecordItemIndex(23));
            
            ValidateAudiogramPoints("Left", "500,50;1000,50;2000,50;4000,50");
            Delay.Milliseconds(0);
            
            ValidateAudiogramPoints("Right", "500,50;1000,50;2000,50;4000,50");
            Delay.Milliseconds(0);
            
            // Step## Press the Back (android) / Cancel
            Report.Log(ReportLevel.Info, "Section", "Step## Press the Back (android) / Cancel", new RecordItemIndex(26));
            
            BackAction();
            Delay.Milliseconds(0);
            
            // Validation## Warning message "Unsaved audiogram data will be lost. Are you sure of your selection?" is displayed with two Options: OK and Cancel
            Report.Log(ReportLevel.Info, "Section", "Validation## Warning message \"Unsaved audiogram data will be lost. Are you sure of your selection?\" is displayed with two Options: OK and Cancel", new RecordItemIndex(28));
            
            ValidateContents("Unsaved audiogram data will be lost. Are you sure of your selection?;OK;Cancel");
            Delay.Milliseconds(0);
            
            ValidateContents("OK;Cancel");
            Delay.Milliseconds(0);
            
            //ValidateALertMessage("");
            //Delay.Milliseconds(0);
            
            // Step## Tap on OK
            Report.Log(ReportLevel.Info, "Section", "Step## Tap on OK", new RecordItemIndex(32));
            
            ClickOnAlertMessage("OK");
            Delay.Milliseconds(0);
            
            // Validation## Goes back to overview screen, without saving audiogram data
            Report.Log(ReportLevel.Info, "Section", "Validation## Goes back to overview screen, without saving audiogram data", new RecordItemIndex(34));
            
            ValidateContents("Enter Audiogram;Select Hearing Aid;Select Sound Profile;Fit Coupling;Assemble Hearing Aid;Send Data to Hearing Aid;Check Sound Comfort");
            Delay.Milliseconds(0);
            
            TapEnterAudiogram();
            Delay.Milliseconds(0);
            
            ValidateAudiogramPoints("Right", "500,;1000,;2000,;4000,");
            Delay.Milliseconds(0);
            
            ValidateAudiogramPoints("Left", "500,;1000,;2000,;4000,");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
