///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using AppLayer;
using AppLayer.AppiumService;
using OpenQA.Selenium;
using OpenQA.Selenium.Appium;
using OpenQA.Selenium.Appium.Android;
using OpenQA.Selenium.Appium.iOS;
using OpenQA.Selenium.Appium.Service;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Remote;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace STSiOSMFApp.TC
{
	public partial class RecommendationOfHIWithAudiogram:CommonHelper
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

//        public void SendDataToHearingAid(string side)
//        {
//			Logger.logInfo(string.Format("Tap on 'Send Data to Hearing Aid' for {0} side",side));
//			if(side.Equals("Right",StringComparison.CurrentCultureIgnoreCase))
//				KeywordImplementation.Click(By.Id("RightEar_Send Data to Hearing Aid"));
//			else if(side.Equals("Left",StringComparison.CurrentCultureIgnoreCase))
//				KeywordImplementation.Click(By.Id("LeftEar_Send Data to Hearing Aid"));
//        }
//
//       
//        public void ContinueWithLeftEar()
//        {
//			Delay.Seconds(2);
//			Logger.logInfo("Continue With Left Ear");
//			var size=Accessor.getDriver().Manage().Window.Size;
//			
//			//Swipe from Bottom to Top and Top to bottom
//			//Find swipe start and end point from screen's width and height.
//			int starty = (int) (size.Height * 0.50);
//			int endy = (int) (size.Height*0.20);
//			int startx = size.Width / 2;
//			
//			int count=0;
//			while(count!=3 && (!KeywordImplementation.waitForObjectExist(By.Name("Continue With Left Ear"),TimeSpan.FromSeconds(1))))
//			{
//				((IOSDriver<IOSElement>)Accessor.getDriver()).Swipe(startx, starty, startx, endy, 500);
//				count++;
//			}
//			KeywordImplementation.Click(By.Name("Continue With Left Ear"));
//        }

//        public void EditAudiogram()
//        {
//			Logger.logInfo("Select the Audiogram Tab");
//			KeywordImplementation.Click(By.Id("Layout_Monaural_Audiogram"));
//			if(!TestSuite.Current.Parameters["isTablet"].Equals("True",StringComparison.CurrentCultureIgnoreCase))
//				TapOnRightButton("Tap on 'Edit' ");
////			else
////				TabTapOnRightButton("Tap on 'Edit' ");
//        }

//        public void ConfirmationToneYes()
//        {
//			ClickOnAlertMessage("OK");
//			Logger.logInfo("Tap on Yes for the - hear the confirmation tone from the hearing aid");
//			KeywordImplementation.Click(By.Id("Btn_HiPairing_Yes"));
//			//		ValidateALertMessage("Pairing and initial programming complete.");
//			ClickOnAlertMessage("OK");
//        }
//
//        public void TapOnBinauralHI(string message, string side)
//        {
//			Logger.logInfo(message);
//			if(side.Equals("Right",StringComparison.CurrentCultureIgnoreCase))
//				KeywordImplementation.Click(By.Id("Txt_Binaural_HISelectedRight"));
//			else if(side.Equals("Left",StringComparison.CurrentCultureIgnoreCase))
//				KeywordImplementation.Click(By.Id("Txt_Binaural_HISelectedLeft"));
//        }
//
//        public void SelectCouplingIfAvailable(bool isCouplingAvailable, string coupling)
//        {
//			if(isCouplingAvailable)
//			{
//				TapOn(coupling);
//			}
//        }
//
//        public void TapOnMonauralHI(string message)
//        {
//			Logger.logInfo(message);
//			KeywordImplementation.Click(By.Id("Txt_Monaural_HISelected"));
//        }

//        public void TapEnterAudiogram()
//        {
//			Logger.logInfo("Tap 'Enter Audiogram'");
//			KeywordImplementation.Click(By.Id("Txt_Fitting_EnterAudiogram"));
//        }

//        public void BackAction()
//        {
//			Logger.logInfo("Press the back key");
//			((AndroidDriver<OpenQA.Selenium.Appium.Android.AndroidElement>)Accessor.getDriver()).PressKeyCode(AndroidKeyCode.Back);
//			Delay.Seconds(2);
//        }

    }
}