///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSiOSMFApp.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DiscardCouplingSelection recording.
    /// </summary>
    [TestModule("da873a6c-0796-4955-b5e2-0ec2f71ea7e7", ModuleType.Recording, 1)]
    public partial class DiscardCouplingSelection : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSiOSMFApp.STSiOSMFAppRepository repository.
        /// </summary>
        public static STSiOSMFApp.STSiOSMFAppRepository repo = STSiOSMFApp.STSiOSMFAppRepository.Instance;

        static DiscardCouplingSelection instance = new DiscardCouplingSelection();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DiscardCouplingSelection()
        {
            H2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DiscardCouplingSelection Instance
        {
            get { return instance; }
        }

#region Variables

        string _H2;

        /// <summary>
        /// Gets or sets the value of variable H2.
        /// </summary>
        [TestVariable("da5622f2-9552-443d-b11e-ef9c240c4d98")]
        public string H2
        {
            get { return _H2; }
            set { _H2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Step## Reselect same customer
            //Report.Log(ReportLevel.Info, "Section", "Step## Reselect same customer", new RecordItemIndex(0));
            
            // Step##  Pre-Condition - Initial setup and Access code setup is done. Customer created with audiogram configured
            Report.Log(ReportLevel.Info, "Section", "Step##  Pre-Condition - Initial setup and Access code setup is done. Customer created with audiogram configured", new RecordItemIndex(1));
            
            TapOnRightButton("Tap on 'Settings'");
            Delay.Milliseconds(0);
            
            SwitchSettingUseMold(ValueConverter.ArgumentFromString<bool>("YesNo", "True"));
            Delay.Milliseconds(0);
            
            TapOnLeftButton("Press the Back key");
            Delay.Milliseconds(0);
            
            CreatePatient("CouplingSelection", "Discard");
            Delay.Milliseconds(0);
            
            SelectCustomerContinue();
            Delay.Milliseconds(0);
            
            CloseApp();
            Delay.Milliseconds(0);
            
            // Step## Open the app, goto List. Select the existing customer
            //Report.Log(ReportLevel.Info, "Section", "Step## Open the app, goto List. Select the existing customer", new RecordItemIndex(8));
            
            StartApp();
            Delay.Milliseconds(0);
            
            SearchCustomer("Discard");
            Delay.Milliseconds(0);
            
            SelectCustomer("CouplingSelection", "Discard");
            Delay.Milliseconds(0);
            
            // Validation##Opens the overview screen with Enter Audiogram step highlighted
            Report.Log(ReportLevel.Info, "Section", "Validation##Opens the overview screen with Enter Audiogram step highlighted", new RecordItemIndex(12));
            
            VerifyActionBarTitle("CouplingSelection, Discard");
            Delay.Milliseconds(0);
            
            // Warning!!!!!!! Need to check Enter Audiogram Highlighted
            Report.Log(ReportLevel.Info, "Section", "Warning!!!!!!! Need to check Enter Audiogram Highlighted", new RecordItemIndex(14));
            
            // Step## Enter (Right), @500Hz, @1kHz, @2kHz, @4kHz.Press Done
            Report.Log(ReportLevel.Info, "Section", "Step## Enter (Right), @500Hz, @1kHz, @2kHz, @4kHz.Press Done", new RecordItemIndex(15));
            
            TapOn("Enter Audiogram");
            Delay.Milliseconds(0);
            
            DrawAudiogramPoints("Right", "500,90;1000,90;2000,90;4000,90");
            Delay.Milliseconds(0);
            
            TapOnRightButton("Click on 'Done'");
            Delay.Milliseconds(0);
            
            // Validation## Popup Appears as "Do you want to enter values for left ear side too?"
            Report.Log(ReportLevel.Info, "Section", "Validation## Popup Appears as \"Do you want to enter values for left ear side too?\"", new RecordItemIndex(19));
            
            ValidateALertMessage("Do you want to enter values for the \"left\" ear side too?");
            Delay.Milliseconds(0);
            
            // Step## Press No when popup appears.
            Report.Log(ReportLevel.Info, "Section", "Step## Press No when popup appears.", new RecordItemIndex(21));
            
            ClickOnAlertMessage("No");
            Delay.Milliseconds(0);
            
            // Validation## Returns to the overview screen with HI-Type : Run SP, coupling : Custom mold and Cluster : P5 and Send data to HI
            Report.Log(ReportLevel.Info, "Section", "Validation## Returns to the overview screen with HI-Type : Run SP, coupling : Custom mold and Cluster : P5 and Send data to HI", new RecordItemIndex(23));
            
            ValidateMonauralHISelected(H2, "Right");
            Delay.Milliseconds(0);
            
            ValidateMonauralCouplingSelected("Custom Mold", "Right");
            Delay.Milliseconds(0);
            
            ValidateMonauralClusterSelected("P5", "Right");
            Delay.Milliseconds(0);
            
            // Warning!!!!! need to validate that the Send data to HI is Highligted
            Report.Log(ReportLevel.Info, "Section", "Warning!!!!! need to validate that the Send data to HI is Highligted", new RecordItemIndex(27));
            
            // Step## Reselect HI to Run SP and select coupling to tip
            Report.Log(ReportLevel.Info, "Section", "Step## Reselect HI to Run SP and select coupling to tip", new RecordItemIndex(28));
            
            TapOnWithValue(H2);
            Delay.Milliseconds(0);
            
            TapOn("Fit right ear with hearing aid");
            Delay.Milliseconds(0);
            
            TapOnWithSwipe(H2);
            Delay.Milliseconds(0);
            
            TapOn("Tip");
            Delay.Milliseconds(0);
            
            // Validation## Coupling type should be changed to tip in overview screen and cluster should not be changed as HI is not changed.
            Report.Log(ReportLevel.Info, "Section", "Validation## Coupling type should be changed to tip in overview screen and cluster should not be changed as HI is not changed.", new RecordItemIndex(33));
            
            ValidateMonauralCouplingSelected("Tip", "Right");
            Delay.Milliseconds(0);
            
            ValidateMonauralClusterSelected("P5", "Right");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
