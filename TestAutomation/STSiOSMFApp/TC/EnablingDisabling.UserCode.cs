///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using AppLayer;
using AppLayer.AppiumService;
using OpenQA.Selenium;
using OpenQA.Selenium.Appium;
using OpenQA.Selenium.Appium.Android;
using OpenQA.Selenium.Appium.iOS;
using OpenQA.Selenium.Appium.Service;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Remote;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace STSiOSMFApp.TC
{
	public partial class EnablingDisabling:CommonHelper
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void SwitchUsageStatistics(bool on)
        {
			var switchUsageStatistics=KeywordImplementation.UIObject(By.Id("switchSettingUsage"),TimeSpan.FromSeconds(5));
			if((on.Equals(true) && (switchUsageStatistics.GetAttribute("value").Equals("0") || switchUsageStatistics.GetAttribute("value").Equals("false"))) ||  (on.Equals(false) && (switchUsageStatistics.GetAttribute("value").Equals("1") || switchUsageStatistics.GetAttribute("value").Equals("true")) ))
			{
				switchUsageStatistics.Click();
				Logger.logSuccess("Usage statistics is " + switchUsageStatistics.GetAttribute("value"));
			}
			Logger.logSnapshot();
        }

        public void ValidateUsageStatistics(bool isON)
        {
        	string message=null;
			var switchUsageStatistics=KeywordImplementation.UIObject(By.Id("switchSettingUsage"),TimeSpan.FromSeconds(1));	
			if((isON.Equals(true) && (switchUsageStatistics.GetAttribute("value").Equals("1") || switchUsageStatistics.GetAttribute("value").Equals("true"))) ||  (isON.Equals(false) && (switchUsageStatistics.GetAttribute("value").Equals("0") || switchUsageStatistics.GetAttribute("value").Equals("false"))))
			{
				message= isON? "Usage statistics is On"	:"Usage statistics is Off";
				Logger.logSuccess(message);
			}
			else
			{
				message= isON? "Usage statistics is Off":"Usage statistics is On";
				Logger.logFailure(message);
			}
			
        }
    }
}