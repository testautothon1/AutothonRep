///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using AppLayer;
using AppLayer.AppiumService;
using OpenQA.Selenium;
using OpenQA.Selenium.Appium;
using OpenQA.Selenium.Appium.Android;
using OpenQA.Selenium.Appium.iOS;
using OpenQA.Selenium.Appium.Service;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Remote;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace STSiOSMFApp.TC
{
	public partial class AppInfo:CommonHelper
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        
        //		public static void Testing()
//		{
//			KeywordImplementation.LaunchiOSApp(new Uri("http://172.16.109.72:4723/wd/hub"),
//			                                   "98f5759091a1bf0dda3e4e03bdfd51f26868c459",
//			                                   "com.signia.mobilefitting");
//			KeywordImplementation.Click(By.Id("OK"), "Accept on Warning Popup for Beta App", true);
//			KeywordImplementation.Click(By.Id("Back"), "Icon Navbar Info", true);
//			KeywordImplementation.Click(By.Id("App Info"), "Icon Navbar Info", true);
//			
//			if(KeywordImplementation.waitForObjectExist(By.Id("App Info"),TimeSpan.FromSeconds(2)))
//				Report.Success(string.Format("App Info page has opened"));
//			else
//				Validate.Fail(string.Format("App Info page has not opened"));
//			//KeywordImplementation.getSnapshot(Accessor.getDriver());
////
////			KeywordImplementation.clickVolumeUp();
////			KeywordImplementation.clickVolumeUp();
////			KeywordImplementation.clickVolumeUp();
////
//			string contents="Intended Use;Important Information;Safety Notes;Control Signals;Pure Tone Estimation;Updates;Always use the latest available version of the app. Keep the operating system of your smartphone up to date.";
//			
//			string[] contentsArray= contents.Split(';');
//			
//			var size=Accessor.getDriver().Manage().Window.Size;
//			
//			/*****************************/
//			//Swipe from Bottom to Top
//			//Find swipe start and end point from screen's width and height.
//			int starty = (int) (size.Height * 0.50);
//			int endy = (int) (size.Height*0.20);
//			int startx = size.Width / 2;
//			
//			foreach(string str in contentsArray)
//			{
//				bool check=false;
//				
//				int count=0;
//				while(count!=6 && (!KeywordImplementation.waitForObjectExist(By.Id(str),TimeSpan.FromSeconds(1))))
//				{
//					//((IOSDriver<OpenQA.Selenium.Appium.iOS.IOSElement>)Accessor.getDriver()).ScrollToExact(str);
//					((IOSDriver<OpenQA.Selenium.Appium.iOS.IOSElement>)Accessor.getDriver()).Swipe(startx, starty, startx, endy,50);
//					count++;
//				}
//				
//				if(KeywordImplementation.waitForObjectExist(By.Id(str),TimeSpan.FromSeconds(1)))
//				{
//					check=true;
//					Report.Success(string.Format("Information '{0}' text has found",str));
//				}
//				
//				if(!check)
//				{
//					Report.Failure(string.Format("Information '{0}' text has not found",str));
//				}
//			}
//			if(Accessor.getDriver()!=null)
//				Accessor.getDriver().Quit();
//			
//		}
//		
//		public void NewPatient_iOS(string udid)
//		{
//		//	KeywordImplementation KeywordImplementation = new KeywordImplementation();
//			
//			try{
//				
//				KeywordImplementation.LaunchiOSApp(new Uri("http://172.16.109.72:4723/wd/hub"),
//			                                   "98f5759091a1bf0dda3e4e03bdfd51f26868c459",
//			                                   "com.signia.mobilefitting");
//				if(Accessor.driverIsForIOS())
//				{
//					KeywordImplementation.Click(By.Id("OK"), "Accept on Warning Popup for Beta App", true);
//				}
//				KeywordImplementation.Click(By.Id("new"), "Click for New");
//				KeywordImplementation.TypeText(By.XPath("//UIATextField[1]"),"ABC");
//				KeywordImplementation.TypeText(By.XPath("//UIATextField[2]"),"XYZ");
//				IWebElement element =((IOSDriver<OpenQA.Selenium.Appium.iOS.IOSElement>)Accessor.getDriver()).FindElementByXPath("//UIATextField[1]");
//				
//				/****************Date Logic******************/
//				string custDOBFormat = Accessor.getDriver().FindElement(By.XPath("//UIATextField[3]")).Text;
//                                string[] dobFormatArray=custDOBFormat.Split('/');
//                                KeywordImplementation.Click(By.XPath("//UIATextField[3]"));
//                                IWebElement monthPicker=null;
//                                string monthValue=null;
//                                IWebElement datePicker=null;
//                                string dateValue=null;
//                                IWebElement yearPicker=null;
//                                string yearValue=null;
//                               
//                                datePicker=Accessor.getDriver().FindElementByXPath("//UIAPickerWheel[1]");
//                                dateValue=datePicker.Text;
//                                monthPicker=Accessor.getDriver().FindElementByXPath("//UIAPickerWheel[2]");
//                                monthValue=monthPicker.Text;
//                                yearPicker=Accessor.getDriver().FindElementByXPath("//UIAPickerWheel[3]");
//                                yearValue=yearPicker.Text;
//                                Accessor.getDriver().FindElementByXPath("//UIAPickerWheel[1]").SendKeys("October");
//                                Accessor.getDriver().FindElementByXPath("//UIAPickerWheel[2]").SendKeys("7");
//                                Accessor.getDriver().FindElementByXPath("//UIAPickerWheel[3]").SendKeys("1960");
//                                //Accessor.getDriver().FindElementByXPath("//UIAPickerWheel[3]").SendKeys("1950");
//                                KeywordImplementation.Click(By.Id("Done"), "Date selected", true);
//				
//				
//				var size=Accessor.getDriver().Manage().Window.Size;
//				
//				/*****************************/
//				//Swipe from Bottom to Top
//				//Find swipe start and end point from screen's width and height.
//				int starty = (int) (size.Height * 0.50);
//				int endy = (int) (size.Height*0.20);
//				int startx = size.Width / 2;
//				int count=0;
//				while(count!=6 && (!KeywordImplementation.waitForObjectExist(By.Id("Continue"),TimeSpan.FromSeconds(1))))
//				{
//					((IOSDriver<OpenQA.Selenium.Appium.iOS.IOSElement>)Accessor.getDriver()).Swipe(startx, starty, startx, endy, 500);
//					count++;
//				}
//				
//				KeywordImplementation.Click(By.Id("Continue"), "Continue to next");
//				KeywordImplementation.Click(By.Id("Enter Audiogram"), "Enter Audiogram");
//				
//				
//				string side= "Left";
//				string points="250,55;500,45;1000,25;2000,50;4000,65;8000,55";
//				
//				KeywordImplementation.Click(By.Id(side), "Enter Side");
//				
//				
//				string[] aPoints=points.Split(';');
//				Dictionary<int, int> auPoints=aPoints.ToDictionary(sKey=>int.Parse(sKey.Split(',')[0]),sValue=>int.Parse(sValue.Split(',')[1]));
//				
//				foreach(KeyValuePair<int, int> pair in auPoints)
//				{
//					Ranorex.Report.Info(pair.Key+"   "+pair.Value);
//				}
//				
//				int lTemp=0;
//				int rTemp=0;
//				
//				foreach(KeyValuePair<int, int> pair in auPoints)
//				{
//					string slider=null;
//					if((pair.Key.ToString().Contains("250") || pair.Key.ToString().Contains("500") || pair.Key.ToString().Contains("1000")) && lTemp==0)
//					{
//						lTemp++;
//						rTemp=0;
//						if(side.Equals("right",StringComparison.CurrentCultureIgnoreCase))
//						{
//							KeywordImplementation.Click(By.Id("Icon Audiogram ScrollRight L"));
//							KeywordImplementation.Click(By.Id("Icon Audiogram ScrollRight L"));
//						}
//						if(side.Equals("left",StringComparison.CurrentCultureIgnoreCase))
//						{
//							KeywordImplementation.waitForObject(By.Id("Icon Audiogram ScrollLeft L"),TimeSpan.FromSeconds(10));
//							KeywordImplementation.Click(By.Id("Icon Audiogram ScrollLeft L"));
//							//      KeywordImplementation.Click(By.Name("Icon Audiogram ScrollLeft L"));
//						}
//					}
//					if((pair.Key.ToString().Contains("2000") || pair.Key.ToString().Contains("4000") || pair.Key.ToString().Contains("8000")) && rTemp==0)
//					{
//						rTemp++;
//						lTemp=0;
//						if(side.Equals("right",StringComparison.CurrentCultureIgnoreCase))
//						{
//							KeywordImplementation.Click(By.Id("Icon Audiogram ScrollRight R"));
//							KeywordImplementation.Click(By.Id("Icon Audiogram ScrollRight R"));
//						}
//						if(side.Equals("left",StringComparison.CurrentCultureIgnoreCase))
//						{
//							KeywordImplementation.waitForObject(By.Name("Icon Audiogram ScrollLeft R"),TimeSpan.FromSeconds(10));
//							KeywordImplementation.Click(By.Id("Icon Audiogram ScrollLeft R"));
//							KeywordImplementation.Click(By.Id("Icon Audiogram ScrollLeft R"));
//						}
//					}
//					
//					if(pair.Key.ToString().Contains("250"))
//					{
//						slider="//UIAApplication[1]/UIAWindow[1]/UIAScrollView[1]/UIASlider[1]";
//					}
//					else if(pair.Key.ToString().Contains("500"))
//					{
//						slider="//UIAApplication[1]/UIAWindow[1]/UIAScrollView[1]/UIASlider[2]";
//					}
//					else if(pair.Key.ToString().Contains("1000"))
//					{
//						slider="//UIAApplication[1]/UIAWindow[1]/UIAScrollView[1]/UIASlider[3]";
//					}
//					else if(pair.Key.ToString().Contains("2000"))
//					{
//						slider="//UIAApplication[1]/UIAWindow[1]/UIAScrollView[1]/UIASlider[4]";
//					}
//					else if(pair.Key.ToString().Contains("4000"))
//					{
//						slider="//UIAApplication[1]/UIAWindow[1]/UIAScrollView[1]/UIASlider[5]";
//					}
//					else if(pair.Key.ToString().Contains("8000"))
//					{
//						slider="//UIAApplication[1]/UIAWindow[1]/UIAScrollView[1]/UIASlider[6]";
//					}
//					
//					
//					double temp=pair.Value/5.0;
//					temp++;
//					Delay.Milliseconds(1000);
//					IWebElement webElement= null;
//					try
//					{
//						
//						webElement= KeywordImplementation.UIObject(By.XPath(slider),TimeSpan.FromSeconds(5));
//					}
//					catch(Exception e)
//					{
//						Report.Info(e.Message);
//					}
//					double heightValueFraction=webElement.Size.Height/20.0;
//					double yCoordinate=heightValueFraction*temp;
//					//                                      Dictionary<string, double> coords=new Dictionary<string, double>();
//					//                                      coords.Add("x",webElement.Location.X+webElement.Size.Width/2);
//					//                                      coords.Add("y",webElement.Location.Y+yCoordinate);
//					//                                      Accessor.getDriver().ExecuteScript("mobile: tap",coords);
//					((IOSDriver<IOSElement>) Accessor.getDriver()).Tap(1,webElement.Location.X+webElement.Size.Width/2,(int)(webElement.Location.Y+yCoordinate),500);
//					
//				}
//				
//				KeywordImplementation.Click(By.Id("Done"), "Done");
//				
//				
//				
//			}
//			finally
//			{
//				if(Accessor.getDriver()!=null)
//					Accessor.getDriver().Quit();
//				
//			}
//			
//			
//		}

    }
}