///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using AppLayer;
using AppLayer.AppiumService;
using OpenQA.Selenium;
using OpenQA.Selenium.Appium;
using OpenQA.Selenium.Appium.Android;
using OpenQA.Selenium.Appium.iOS;
using OpenQA.Selenium.Appium.Service;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Remote;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace STSiOSMFApp.TC
{
	public partial class SwipeToDeleteCustomer:CommonHelper
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void ValidateButtonExist(string buttonName)
        {
			var size=Accessor.getDriver().Manage().Window.Size;
			
			//Swipe from Bottom to Top and Top to bottom
			//Find swipe start and end point from screen's width and height.
			int starty = (int) (size.Height * 0.50);
			int endy = (int) (size.Height*0.20);
			int startx = size.Width / 2;
			
			int count=0;
			while(count!=3 && (!KeywordImplementation.waitForObjectExist(By.Name(buttonName),TimeSpan.FromSeconds(1))))
			{
				((IOSDriver<IOSElement>)Accessor.getDriver()).Swipe(startx, starty, startx, endy, 500);
				count++;
			}
			
			if(KeywordImplementation.waitForObjectExist(By.Name(buttonName),TimeSpan.FromSeconds(2)))
				Logger.logSuccess(string.Format("'{0}' is exist",buttonName));
			else
				Logger.logFailure(string.Format("'{0}' does not exist",buttonName));
        }

        public void SwipePatientLeft(string lastName, string firstName)
        {
			var client=	KeywordImplementation.UIObject(By.XPath("//UIATableView[@name='Search results']//UIAStaticText[@name='"+lastName+", "+firstName+"']"));
			
			var size= client.Size;
			
			int startx = (int) (size.Width * 0.70);
			int endx = (int) (size.Width * 0.30);
			int starty = size.Height / 2;
			
			//Swipe from right to left
			((IOSDriver<IOSElement>)Accessor.getDriver()).Swipe(client.Location.X+startx, client.Location.Y+starty, client.Location.X+endx, client.Location.Y+starty, 2000);
			Delay.Seconds(1);
        }

      
    }
}