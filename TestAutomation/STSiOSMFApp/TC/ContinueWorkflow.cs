///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STSiOSMFApp.TC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ContinueWorkflow recording.
    /// </summary>
    [TestModule("f762d65c-10dd-4f80-a527-e58d8c90b80d", ModuleType.Recording, 1)]
    public partial class ContinueWorkflow : ITestModule
    {
        /// <summary>
        /// Holds an instance of the STSiOSMFApp.STSiOSMFAppRepository repository.
        /// </summary>
        public static STSiOSMFApp.STSiOSMFAppRepository repo = STSiOSMFApp.STSiOSMFAppRepository.Instance;

        static ContinueWorkflow instance = new ContinueWorkflow();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ContinueWorkflow()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ContinueWorkflow Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Step## Open the app and select new
            Report.Log(ReportLevel.Info, "Section", "Step## Open the app and select new", new RecordItemIndex(0));
            
            // Step## Enter last name and first name alone and hit continue
            Report.Log(ReportLevel.Info, "Section", "Step## Enter last name and first name alone and hit continue", new RecordItemIndex(1));
            
            CreatePatient("Workflow", "Patient");
            Delay.Milliseconds(0);
            
            // Validation## The Continue button is active and directs to 'Workflow Overview' screen.
            Report.Log(ReportLevel.Info, "Section", "Validation## The Continue button is active and directs to 'Workflow Overview' screen.", new RecordItemIndex(3));
            
            ValidateCustomerContinueEnabled(ValueConverter.ArgumentFromString<bool>("enabled", "True"));
            Delay.Milliseconds(0);
            
            SelectCustomerContinue();
            Delay.Milliseconds(0);
            
            ValidateContents("Enter Audiogram;Select Hearing Aid;Select Sound Profile;Fit Coupling;Assemble Hearing Aid;Send Data to Hearing Aid;Check Sound Comfort");
            Delay.Milliseconds(0);
            
            TapOnLeftButton("Press on  back");
            Delay.Milliseconds(0);
            
            // Step## Enter only last name and Click Continue
            Report.Log(ReportLevel.Info, "Section", "Step## Enter only last name and Click Continue", new RecordItemIndex(8));
            
            CreatePatient("Workflow", "");
            Delay.Milliseconds(0);
            
            // Validation## The Continue button is greyed out (inactive) as Name field (mandatory field) has data missing
            Report.Log(ReportLevel.Info, "Section", "Validation## The Continue button is greyed out (inactive) as Name field (mandatory field) has data missing", new RecordItemIndex(10));
            
            ValidateCustomerContinueEnabled(ValueConverter.ArgumentFromString<bool>("enabled", "False"));
            Delay.Milliseconds(0);
            
            // Step## Enter data for all three fields - first, last name and dob, hit Continue
            Report.Log(ReportLevel.Info, "Section", "Step## Enter data for all three fields - first, last name and dob, hit Continue", new RecordItemIndex(12));
            
            CreatePatient("Workflow", "Patient", "June_7_1950");
            Delay.Milliseconds(0);
            
            ValidateCustomerContinueEnabled(ValueConverter.ArgumentFromString<bool>("enabled", "True"));
            Delay.Milliseconds(0);
            
            SelectCustomerContinue();
            Delay.Milliseconds(0);
            
            ValidateContents("Enter Audiogram;Select Hearing Aid;Select Sound Profile;Fit Coupling;Assemble Hearing Aid;Send Data to Hearing Aid;Check Sound Comfort");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
